<?php

/**
 * @file
 * Class HedleyContactsByLanguage.
 */

/**
 * Class HedleyContactsByLanguage.
 */
class HedleyContactsByLanguage extends HedleyMunicipalityWebTestCase {

  /**
   * Get info.
   */
  public static function getInfo() {
    return array(
      'name' => 'Contacts by language',
      'description' => 'Test getting the expected contacts per language.',
      'group' => 'Hedley',
    );
  }

  /**
   * Test get Contacts per language.
   */
  public function testContactsByLanguage() {
    $ar_language_code = 'ar';
    $he_language_code = 'he';

    // Create a municipality group.
    $user1 = $this->drupalCreateUser();
    $municipality_settings = [
      'type' => 'municipality',
      'uid' => $user1->uid,
      'language' => $ar_language_code,
      // We need to set the default language field for the group because this
      // determines the language for all the group content under this group.
      'field_default_language' => [
        LANGUAGE_NONE => [
          ['value' => $ar_language_code],
        ],
      ],
    ];
    $municipality = $this->drupalCreateNode($municipality_settings);

    // Create a contact group content.
    $contact_settings = [
      'type' => 'contact',
      'uid' => $user1->uid,
      'language' => $ar_language_code,
      'field_first_name' => [
        $he_language_code => [
          ['value' => 'First name Hebrew'],
        ],
        $ar_language_code => [
          ['value' => 'First name Arabic'],
        ],
      ],
      'field_last_name' => [
        $he_language_code => [
          ['value' => 'Last name Hebrew'],
        ],
        $ar_language_code => [
          ['value' => 'Last name Arabic'],
        ],
      ],
      // Add the created group as the parent group for this entity.
      OG_AUDIENCE_FIELD => [
        LANGUAGE_NONE => [
          ['target_id' => $municipality->nid],
        ],
      ],
    ];

    // Create the contact node.
    $this->drupalCreateNode($contact_settings);

    // Set expected titles in each language.
    $he_expected_title = $contact_settings['field_first_name'][$he_language_code][0]['value'] . ' ' . $contact_settings['field_last_name'][$he_language_code][0]['value'];
    $ar_expected_title = $contact_settings['field_first_name'][$ar_language_code][0]['value'] . ' ' . $contact_settings['field_last_name'][$ar_language_code][0]['value'];

    // Get the contacts from the function we want to test.
    $he_municipality_contact = hedley_contact_get_contacts_by_group($municipality, $he_language_code);
    $ar_municipality_contact = hedley_contact_get_contacts_by_group($municipality, $ar_language_code);

    $this->assertEqual($he_municipality_contact[0]['name'], $he_expected_title, 'Expected Hebrew title is correct.');
    $this->assertEqual($ar_municipality_contact[0]['name'], $ar_expected_title, 'Expected Arabic title is correct.');
  }

}
