<?php

/**
 * @file
 * Code for the Hedley Event feature.
 */

include_once 'hedley_event.features.inc';

/**
 * Return events by group.
 *
 * @param object $group
 *   The group.
 * @param string $language_code
 *   The language code (e.g. "he", "ar").
 *
 * @return array
 *   Array with the events list.
 */
function hedley_event_get_events_by_group($group, $language_code) {
  // Get contact nodes by group.
  $nodes = hedley_municipality_get_nodes('event', 100, $group);
  if (!$nodes) {
    // No contacts found.
    return NULL;
  }

  $events = [];
  foreach ($nodes as $node) {
    $wrapper = entity_metadata_wrapper('node', $node);
    $wrapper->language($language_code);

    // Ignore events without a title in the current language.
    if (!$wrapper->label()) {
      continue;
    }

    $image = $wrapper->field_image->value();
    $date = $wrapper->field_date->value();

    $event = [
      'id' => $wrapper->getIdentifier(),
      'name' => check_plain($wrapper->label()),
      'description' => !empty($wrapper->body->value()) ? $wrapper->body->value->value() : '',
      'image_url' => $image ? image_style_url('medium', $image['uri']) : '',
      // Adding t() to the day name to give the ability for the content editor
      // to add translations.
      'date' => !empty($date) ? format_date($date['value'], 'custom', 'd.m.y G:i') : '',
      'day' => !empty($date) ? t(format_date($date['value'], 'custom', 'l')) : '',
      'end_date' => !empty($date) && $date['value2'] ? format_date($date['value2'], 'custom', 'd.m.y G:i') : '',
      'recurring_weekly' => $wrapper->field_recurring_weekly->value() ? t('Weekly event') : '',
      'ticket_price' => $wrapper->field_ticket_price->value() ? t('Price: @price', array('@price' => $wrapper->field_ticket_price->value())) : '',
      'more_details_text' => t('More details'),
    ];

    // Remove empty values (elm expects the correct value or nothing).
    $events[] = array_filter($event);
  }

  return $events;

}
